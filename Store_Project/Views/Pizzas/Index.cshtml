@model IEnumerable<Store_Project.Models.Pizza>

@{ ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_PizzaIndexLayout.cshtml"; }

<h1>Manager's Menu</h1>
<a class="btn btn-secondary" asp-action="Create">Create New Pizza</a>


<div id="cards-pizza">

    @foreach (var item in Model)
    {
    <a asp-action="Edit" asp-route-id="@item.Id" title="Click to edit...">
        <div class='card col-md-3 col-sm-4' 
             @if (item.To_present == false)
             {
                 @: style='opacity:0.25;');
                ;
             } >

        @if (item.Pizza_image.Image_content != null)
        {
            string img = Convert.ToBase64String(item.Pizza_image.Image_content);
    <img class="card-img-top" alt="Card image cap" src="data:image/png;base64,@img">}
        <div class="card-body">
            <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
            <h6 class="card-subtitle mb-2 text-muted price-shadow">@Html.DisplayFor(modelItem => item.Price)</h6>
            <h6 class="card-subtitle mb-2 text-muted">
                @for (int i = 0; i < item.Pizza_tags.Count; i++)
                {
    @Html.DisplayFor(m => item.Pizza_tags[i].Name);
    if (i == item.Pizza_tags.Count - 1)
        break;
    @: |
}
            </h6>
            <h6 class="card-subtitle mb-2 text-muted">
                @for (int i = 0; i < item.Pizza_toppings.Count; i++)
                {
    @Html.DisplayFor(m => item.Pizza_toppings[i].Name);
    if (i == item.Pizza_toppings.Count - 1)
        break;
    @: |
}
            </h6>
            @Html.DisplayFor(modelItem => item.Pizza_sauce) sauce<br />
            @Html.DisplayFor(modelItem => item.Pizza_width) crust<br />
            @Html.DisplayFor(modelItem => item.Pizza_size) size<br />
            @if (item.With_cheese)
            {
    @:With Cheese
}
else
{
    @:Without Cheese
}


        </div>
    </div>
                </a>}
</div>
