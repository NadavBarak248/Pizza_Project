@model IEnumerable<Store_Project.Models.Pizza>

@{ ViewData["Title"] = "Menu";
    Layout = "~/Views/Shared/_PizzaIndexLayout.cshtml"; }

<h1>Menu</h1>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{@Html.AntiForgeryToken()}


<div>
    <div class="bg-light p-4">
        <h4 class="text-black-50">Advanced Search</h4>

        <form id="SearchComplexAjaxForm" class="float">
            <div class="container">
                <div class="row">
                    <div class="input-group mb-3">
                        <input name="searchquery" id="searchQuery" placeholder="Pizza Name" autocomplete="off" />

                        <div class="col-1"></div>

                        <input name="searchprice" id="searchprice" placeholder="Price Limit" autocomplete="off" />
                        <br />
                        <span name="priceerror" id="priceerror" class="text-danger"></span>

                        <div class="col-1"></div>

                        <select class="form-control custom-select col-3" id="currency">
                            <option value="ILS" selected="selected">ILS</option>
                            <option value="USD">USD</option>
                            <option value="EUR">EUR</option>
                        </select>
                    </div>
                </div>

                <div class="row">
                    <div class="input-group mb-3">

                        <select class="form-control" multiple asp-items="@ViewBag.tags" name="tagsearch" id="tagsearch"></select>

                        <div class="col-1"></div>

                        <select class="form-control custom-select col-3" multiple asp-items="@ViewBag.pizzaSauces" name="saucesearch" id="saucesearch" style="width:200px"></select>

                        <div class="col-1"></div>

                        <select class="form-control" multiple asp-items="@ViewBag.toppings" name="toppingsearch" id="toppingsearch"></select>
                    </div>
                </div>

            </div>
            <br />

        </form>
    </div>
</div>




<div id="cards-pizza" class="container">
    <div class="row align-items-stretch" id="toClean">
        @foreach (var item in Model)
        {
            <div class="card h-100">
                <a asp-action="Details" asp-route-id="@item.Id">
                    @if (item.Pizza_image.Image_content != null)
                    {
                        string img = Convert.ToBase64String(item.Pizza_image.Image_content);
                        <img class="card-img-top" alt="Card image cap" src="data:image/png;base64,@img">}
                </a>
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                    <b class="card-title">@Html.DisplayFor(modelItem => item.Price)</b>
                    <div class="card-subtitle mb-2 text-muted">
                        <u>Tags</u>:  
                        @for (int i = 0; i < item.Pizza_tags.Count; i++)
                        {
                            @Html.DisplayFor(m => item.Pizza_tags[i].Name);
                            if (i == item.Pizza_tags.Count - 1)
                                break;
                            @: |
                        }
                    </div>
                    <div class="card-text">
                        <u>Toppings</u>: 
                        @for (int i = 0; i < item.Pizza_toppings.Count; i++)
                        {
                            @Html.DisplayFor(m => item.Pizza_toppings[i].Name);
                            if (i == item.Pizza_toppings.Count - 1)
                                break;
                            @: |
                        }
                    </div>
                    @Html.DisplayFor(modelItem => item.Pizza_sauce) sauce<br />
                    @Html.DisplayFor(modelItem => item.Pizza_width) crust<br />
                    @Html.DisplayFor(modelItem => item.Pizza_size) size<br />
                    @if (item.With_cheese)
                    {
                        @:With Cheese
                    }
                    else
                    {
                        @:Without Cheese
                    }
                    <br />

                    <button type="button" class="btn btn-outline-secondary" onclick="AddPizza(@item.Id)">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                            <path d="M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z"></path>
                        </svg>
                        Add to Order
                        <span class="visually-hidden">Button</span>
                    </button>

                </div>
            </div>
        }
    </div>
</div>

<div class="d-grid gap-2 col-6 mx-auto" >
        <button class="btn btn-primary" type="button" asp-action="AddToOrder" > My Order </button> // need to send the list as parameter 
</div>


<script type="text/x-custom-html" id="tableSearchTemplate">
    <div class="card h-100">
        <a href="/Pizzas/Details/{id}">
            <img class="card-img-top" alt="Card image cap" src="data:image/png;base64,{pizza_image}">
        </a>
                    <div class="card-body">
                        <h5 class="card-title">{name}</h5>
                        <b class="card-title">{price}</b>
                        <div class="card-subtitle mb-2 text-muted">
                            <u>Tags</u>:
                            {pizza_tags}
                        </div>
                        <div class="card-text">
                            <u>Toppings</u>:
                            {pizza_toppings}
                        </div>
                        {pizza_sauce} sauce<br />
                        {pizza_width} crust<br />
                        {pizza_size} size<br />
                        {with_cheese}<br />

                        <button type="button" class="btn btn-outline-secondary" onclick="AddPizza({id})">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                                <path d="M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z"></path>
                            </svg>
                            Add to Order
                            <span class="visually-hidden">Button</span>
                        </button>
                    </div>
    </div>

</script>

<script>
    var order = [];
    function AddPizza(id) {
        order.push(id);
        console.log(order);
    }
    function MyOrder() {
        return order;
    }
</script>

@section Scripts{
    <script src="~/js/pizzaSearch.js"></script>
}