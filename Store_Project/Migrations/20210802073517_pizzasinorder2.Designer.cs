// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store_Project.Data;

namespace Store_Project.Migrations
{
    [DbContext(typeof(Store_ProjectContext))]
    [Migration("20210802073517_pizzasinorder2")]
    partial class pizzasinorder2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaTag", b =>
                {
                    b.Property<int>("Pizza_tagId")
                        .HasColumnType("int");

                    b.Property<int>("Pizza_tagsId")
                        .HasColumnType("int");

                    b.HasKey("Pizza_tagId", "Pizza_tagsId");

                    b.HasIndex("Pizza_tagsId");

                    b.ToTable("PizzaTag");
                });

            modelBuilder.Entity("PizzaTopping", b =>
                {
                    b.Property<int>("Pizza_toppingsId")
                        .HasColumnType("int");

                    b.Property<int>("Toppings_pizzaId")
                        .HasColumnType("int");

                    b.HasKey("Pizza_toppingsId", "Toppings_pizzaId");

                    b.HasIndex("Toppings_pizzaId");

                    b.ToTable("PizzaTopping");
                });

            modelBuilder.Entity("Store_Project.Models.Branch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Branch_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("Store_Project.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Order_date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("User_orderId")
                        .HasColumnType("int");

                    b.Property<int>("branch_Idid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User_orderId");

                    b.HasIndex("branch_Idid");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Store_Project.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pizza_sauce")
                        .HasColumnType("int");

                    b.Property<int>("Pizza_size")
                        .HasColumnType("int");

                    b.Property<int>("Pizza_width")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("To_present")
                        .HasColumnType("bit");

                    b.Property<bool>("With_cheese")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("Store_Project.Models.PizzaImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image_content")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId")
                        .IsUnique();

                    b.ToTable("PizzaImage");
                });

            modelBuilder.Entity("Store_Project.Models.PizzasInOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzasInOrder");
                });

            modelBuilder.Entity("Store_Project.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Store_Project.Models.Topping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Topping");
                });

            modelBuilder.Entity("Store_Project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PizzaTag", b =>
                {
                    b.HasOne("Store_Project.Models.Pizza", null)
                        .WithMany()
                        .HasForeignKey("Pizza_tagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Project.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("Pizza_tagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaTopping", b =>
                {
                    b.HasOne("Store_Project.Models.Topping", null)
                        .WithMany()
                        .HasForeignKey("Pizza_toppingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Project.Models.Pizza", null)
                        .WithMany()
                        .HasForeignKey("Toppings_pizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Store_Project.Models.Order", b =>
                {
                    b.HasOne("Store_Project.Models.User", "User_order")
                        .WithMany("User_orders")
                        .HasForeignKey("User_orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Project.Models.Branch", "branch_Id")
                        .WithMany("Branch_orders")
                        .HasForeignKey("branch_Idid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("branch_Id");

                    b.Navigation("User_order");
                });

            modelBuilder.Entity("Store_Project.Models.PizzaImage", b =>
                {
                    b.HasOne("Store_Project.Models.Pizza", "Pizza")
                        .WithOne("Pizza_image")
                        .HasForeignKey("Store_Project.Models.PizzaImage", "PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("Store_Project.Models.PizzasInOrder", b =>
                {
                    b.HasOne("Store_Project.Models.Order", "Orders")
                        .WithMany("PizzaOrder")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Store_Project.Models.Pizza", "Pizzas")
                        .WithMany("PizzaOrder")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Store_Project.Models.Branch", b =>
                {
                    b.Navigation("Branch_orders");
                });

            modelBuilder.Entity("Store_Project.Models.Order", b =>
                {
                    b.Navigation("PizzaOrder");
                });

            modelBuilder.Entity("Store_Project.Models.Pizza", b =>
                {
                    b.Navigation("Pizza_image");

                    b.Navigation("PizzaOrder");
                });

            modelBuilder.Entity("Store_Project.Models.User", b =>
                {
                    b.Navigation("User_orders");
                });
#pragma warning restore 612, 618
        }
    }
}
